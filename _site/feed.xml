<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-08-02T10:39:34-05:00</updated><id>http://localhost:4000/</id><title type="html">Flex</title><entry><title type="html">Help other Mac admins find your scripts on GitHub with Topics</title><link href="http://localhost:4000/posts/2018/07/25/github-topics.html" rel="alternate" type="text/html" title="Help other Mac admins find your scripts on GitHub with Topics" /><published>2018-07-25T12:45:00-05:00</published><updated>2018-07-25T12:45:00-05:00</updated><id>http://localhost:4000/posts/2018/07/25/github-topics</id><content type="html" xml:base="http://localhost:4000/posts/2018/07/25/github-topics.html">&lt;p&gt;So you‚Äôve made some scripts for managing your Macs and you threw them on Github. Awesome! But Github is huge and filled with lots of code and content, so how can you help people find your scripts?&lt;/p&gt;

&lt;p&gt;Try tagging your repos with Topics.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.github.com/2017-01-31-introducing-topics/&quot;&gt;Topics&lt;/a&gt; are a way to help categorize your code repositories on Github to make them more easily discoverable by others. All you need to do is click on Manage topics under your repo description and start typing. Github will have some recommendations for you, and as you start typing other options will populate that you can select from. Once you have topics on your repo, anyone that clicks on that topic on any repo on Github will be presented with a list of repos that are categorized with that topic.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/macadmin-topic-on-github.png&quot; alt=&quot;Topics on Github&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Keep the topics short and to the point, and include the name of the management framework you‚Äôre working with if applicable. This will go a long way in helping others find the code you put the time and effort into sharing with the world.&lt;/p&gt;

&lt;p&gt;Sharing is caring. ‚ù§Ô∏è&lt;/p&gt;

&lt;p&gt;üíñ Em&lt;/p&gt;</content><author><name></name></author><summary type="html">So you‚Äôve made some scripts for managing your Macs and you threw them on Github. Awesome! But Github is huge and filled with lots of code and content, so how can you help people find your scripts?</summary></entry><entry><title type="html">Creating folders in repos on Github</title><link href="http://localhost:4000/posts/2017/02/11/making-repo-folders.html" rel="alternate" type="text/html" title="Creating folders in repos on Github" /><published>2017-02-11T11:40:00-06:00</published><updated>2017-02-11T11:40:00-06:00</updated><id>http://localhost:4000/posts/2017/02/11/making-repo-folders</id><content type="html" xml:base="http://localhost:4000/posts/2017/02/11/making-repo-folders.html">&lt;p&gt;Hey y‚Äôall, I made a really short/quick video on how to create a folder within a repo on Github.com. It‚Äôs not something very obvious, so I thought a little video showing how it works would maybe help some folks out, especially those that rely on the web GUI rather than using Git/GitHub Desktop.&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/203605105&quot; width=&quot;640&quot; height=&quot;224&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;https://vimeo.com/203605105&quot;&gt;Creating a folder within a repo on Github.com&lt;/a&gt; from &lt;a href=&quot;https://vimeo.com/modtitan&quot;&gt;modtitan&lt;/a&gt; on &lt;a href=&quot;https://vimeo.com&quot;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If the above video doesn‚Äôt appear, you can see it on &lt;a href=&quot;https://vimeo.com/203605105&quot;&gt;Vimeo here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;üíñ Em&lt;/p&gt;</content><author><name></name></author><summary type="html">Hey y‚Äôall, I made a really short/quick video on how to create a folder within a repo on Github.com. It‚Äôs not something very obvious, so I thought a little video showing how it works would maybe help some folks out, especially those that rely on the web GUI rather than using Git/GitHub Desktop.</summary></entry><entry><title type="html">Getting the logged-in Apple ID</title><link href="http://localhost:4000/posts/2017/01/18/current-apple-id.html" rel="alternate" type="text/html" title="Getting the logged-in Apple ID" /><published>2017-01-18T14:54:00-06:00</published><updated>2017-01-18T14:54:00-06:00</updated><id>http://localhost:4000/posts/2017/01/18/current-apple-id</id><content type="html" xml:base="http://localhost:4000/posts/2017/01/18/current-apple-id.html">&lt;p&gt;macOS Sierra does quite a few things differently with the App Store, including the lack of a &lt;code class=&quot;highlighter-rouge&quot;&gt;debug&lt;/code&gt; menu option and the lack of a &lt;code class=&quot;highlighter-rouge&quot;&gt;com.apple.storeagent.plist&lt;/code&gt; which is where folks used to cull that information for reporting purposes.&lt;/p&gt;

&lt;p&gt;After asking in the &lt;a href=&quot;https://macadmins.slack.com/archives/jamfnation&quot;&gt;#jamfnation channel on the MacAdmins Slack&lt;/a&gt; a few of us came up with the following alternative to get that information:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/libexec/PlistBuddy -c &quot;Print :PrimaryAccount:0:1:identifier&quot; /Users/$username/Library/Preferences/com.apple.commerce.plist&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I created an Extension Attribute out of the above &lt;a href=&quot;https://github.com/smashism/casper-extension-attributes/blob/master/appestore_appleid.sh&quot;&gt;here&lt;/a&gt;. Detailed blog post forthcoming.&lt;/p&gt;</content><author><name></name></author><summary type="html">macOS Sierra does quite a few things differently with the App Store, including the lack of a debug menu option and the lack of a com.apple.storeagent.plist which is where folks used to cull that information for reporting purposes.</summary></entry><entry><title type="html">Checking and Enabling FileVault 2</title><link href="http://localhost:4000/posts/2017/01/10/filevault2-check.html" rel="alternate" type="text/html" title="Checking and Enabling FileVault 2" /><published>2017-01-10T11:40:00-06:00</published><updated>2017-01-10T11:40:00-06:00</updated><id>http://localhost:4000/posts/2017/01/10/filevault2-check</id><content type="html" xml:base="http://localhost:4000/posts/2017/01/10/filevault2-check.html">&lt;p&gt;I spent the better part of Monday trying to make a &lt;a href=&quot;http://grahampugh.github.io/2017/01/08/better-application-to-run-shell-scripts-with-admin-rights.html&quot;&gt;simple AppleScript application&lt;/a&gt; that could act as an all-in-one Disk Encryption enabler/checker utility.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/smashism/smashism.github.io/master/images/Screen%20Shot%202017-01-09%20at%202.58.57%20PM.png&quot; alt=&quot;Disk Encryption&quot; /&gt;&lt;/p&gt;

&lt;p&gt;All the AppleScript app does, really, is run a shell script nestled inside. The shell script spits out dialogs with &lt;code class=&quot;highlighter-rouge&quot;&gt;fdesetup status&lt;/code&gt;, and if the status is something other than &lt;code class=&quot;highlighter-rouge&quot;&gt;FileVault is On.&lt;/code&gt; it will run a custom trigger for the JSS to run and configure an institutional FileVault 2 policy.&lt;/p&gt;

&lt;p&gt;You can see the script &lt;a href=&quot;https://github.com/smashism/casper-scripts/blob/master/policy_fv2check.sh&quot;&gt;here&lt;/a&gt;. Detailed blog post forthcoming.&lt;/p&gt;</content><author><name></name></author><summary type="html">I spent the better part of Monday trying to make a simple AppleScript application that could act as an all-in-one Disk Encryption enabler/checker utility.</summary></entry><entry><title type="html">An Addition to Rich‚Äôs Account Migration Script</title><link href="http://localhost:4000/posts/2017/01/04/migrate-ad-account-to-local-account.html" rel="alternate" type="text/html" title="An Addition to Rich's Account Migration Script" /><published>2017-01-04T08:51:00-06:00</published><updated>2017-01-04T08:51:00-06:00</updated><id>http://localhost:4000/posts/2017/01/04/migrate-ad-account-to-local-account</id><content type="html" xml:base="http://localhost:4000/posts/2017/01/04/migrate-ad-account-to-local-account.html">&lt;p&gt;As I continue to find ways to make moving our Macs off of AD as easily as possible, I found myself turning to Rich‚Äôs &lt;a href=&quot;https://github.com/rtrouton/rtrouton_scripts/tree/master/rtrouton_scripts/migrate_ad_mobile_account_to_local_account&quot;&gt;MigrateADMobileAccounttoLocalAccouint&lt;/a&gt; script to see if it would work in our environment. And it does, sweet! But part of what makes a move like this feasible for our organization is making sure something like &lt;a href=&quot;http://nomad.menu&quot;&gt;NoMAD&lt;/a&gt; is in place for password sync and expiration feedback.&lt;/p&gt;

&lt;p&gt;So I made a &lt;a href=&quot;https://github.com/smashism/casper-scripts/blob/master/migrate_ad_account_to_local_account.sh&quot;&gt;small update&lt;/a&gt; to Rich‚Äôs script, which once the &lt;code class=&quot;highlighter-rouge&quot;&gt;Finished&lt;/code&gt; option is selected will 1) install NoMad via a JSS policy on a custom trigger, 2) run recon silently to update Smart Group membership, 3) &lt;code class=&quot;highlighter-rouge&quot;&gt;sleep 20&lt;/code&gt; to make sure the JSS sees the Smart Group change and apply a configuration profile for the app, and 4) open NoMAD.&lt;/p&gt;

&lt;p&gt;My addition looks something like this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Installing newest version of NoMAD&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Installing NoMAD...&quot;&lt;/span&gt;
jamf policy &lt;span class=&quot;nt&quot;&gt;-trigger&lt;/span&gt; update_nomad &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;/dev/null &lt;span class=&quot;c&quot;&gt;# the &amp;gt;/dev/null supresses output of the policy, just to keep things tidy&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Run recon to detect NoMAD and apply configuration settings&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Running recon...&quot;&lt;/span&gt;
jamf recon &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;/dev/null &lt;span class=&quot;c&quot;&gt;# the &amp;gt;/dev/null supresses output of the recon, just to keep things tidy&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Give the JSS a chance to apply the configuration settings&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Applying NoMAD settings...&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sleep &lt;/span&gt;10

&lt;span class=&quot;c&quot;&gt;# Get current user and OS information.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;CURRENT_USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;/usr/bin/stat &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt;%Su /dev/console&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;USER_ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$CURRENT_USER&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;OS_MAJOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;/usr/bin/sw_vers &lt;span class=&quot;nt&quot;&gt;-productVersion&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $1}'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;OS_MINOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;/usr/bin/sw_vers &lt;span class=&quot;nt&quot;&gt;-productVersion&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $2}'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Launch NoMAD using launchctl.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Launching NoMAD...&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$OS_MAJOR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-eq&lt;/span&gt; 10 &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$OS_MINOR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-le&lt;/span&gt; 9 &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
	&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LOGINWINDOW_PID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;pgrep &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$USER_ID&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; loginwindow&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
	launchctl bsexec &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LOGINWINDOW_PID&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; open &lt;span class=&quot;s2&quot;&gt;&quot;/Applications/NoMAD.app&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$OS_MAJOR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-eq&lt;/span&gt; 10 &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$OS_MINOR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-gt&lt;/span&gt; 9 &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
	&lt;/span&gt;launchctl asuser &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$USER_ID&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; open &lt;span class=&quot;s2&quot;&gt;&quot;/Applications/NoMAD.app&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[ERROR] macOS &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$OS_MAJOR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$OS_MINOR&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is not supported.&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1004
&lt;span class=&quot;k&quot;&gt;fi
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You‚Äôd want to change the custom trigger to install NoMAD to whatever you prefer.&lt;/p&gt;</content><author><name></name></author><summary type="html">As I continue to find ways to make moving our Macs off of AD as easily as possible, I found myself turning to Rich‚Äôs MigrateADMobileAccounttoLocalAccouint script to see if it would work in our environment. And it does, sweet! But part of what makes a move like this feasible for our organization is making sure something like NoMAD is in place for password sync and expiration feedback.</summary></entry><entry><title type="html">Logo Check</title><link href="http://localhost:4000/posts/2016/12/30/logo-check.html" rel="alternate" type="text/html" title="Logo Check" /><published>2016-12-30T06:40:00-06:00</published><updated>2016-12-30T06:40:00-06:00</updated><id>http://localhost:4000/posts/2016/12/30/logo-check</id><content type="html" xml:base="http://localhost:4000/posts/2016/12/30/logo-check.html">&lt;h2 id=&quot;checking-for-a-company-logo&quot;&gt;Checking for a Company Logo&lt;/h2&gt;

&lt;p&gt;Hey y‚Äôall. I found myself using a company logo quite a bit in jamfHelper and AppleScript prompts during policies, so I though it would be handy to have a script with logic to check and see if an icon is present and installing on demand, rather than including a .pkg installer in every policy that requires it.&lt;/p&gt;

&lt;p&gt;It‚Äôs a relatively simple script, which you can see &lt;a href=&quot;https://github.com/smashism/casper-scripts/blob/master/policy_CompanyLogo.sh&quot;&gt;here&lt;/a&gt;. Replace the &lt;code class=&quot;highlighter-rouge&quot;&gt;/path/to/CompanyLogo.icns&lt;/code&gt; with wherever the logo is you want to check for. Echos are included so that the policy logs show if the icon needed to be installed or not. This script could be easily updated to check for all sorts of things and install other things as needed.&lt;/p&gt;

&lt;p&gt;In the JSS you need two policies:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Whatever policy you are running that includes a script with jamfHelper pop-ups, etc., with the policy_CompanyLogo.sh also included set to run &lt;code class=&quot;highlighter-rouge&quot;&gt;Before&lt;/code&gt; other installers/scripts.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A second policy that runs on the custom trigger you specify in the policy_CompanyLogo.sh.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I got the idea for this from both my &lt;a href=&quot;https://github.com/smashism/casper-scripts/blob/master/update_nomad.sh&quot;&gt;NoMAD update script&lt;/a&gt; and Rich Trouton‚Äôs &lt;a href=&quot;https://gist.github.com/rtrouton/8830790#file-gistfile1-sh&quot;&gt;printer driver check script&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As always, test before deploying in production!&lt;/p&gt;</content><author><name></name></author><summary type="html">Checking for a Company Logo</summary></entry><entry><title type="html">Recreating the login keychain</title><link href="http://localhost:4000/posts/2016/12/29/recreate-keychain.html" rel="alternate" type="text/html" title="Recreating the login keychain" /><published>2016-12-29T00:00:00-06:00</published><updated>2016-12-29T00:00:00-06:00</updated><id>http://localhost:4000/posts/2016/12/29/recreate-keychain</id><content type="html" xml:base="http://localhost:4000/posts/2016/12/29/recreate-keychain.html">&lt;h2 id=&quot;recreate_keychainsh&quot;&gt;recreate_keychain.sh&lt;/h2&gt;

&lt;p&gt;Today I built a new script to run with a Self Service policy that allows a user to recreate their login keychain. The script deletes their old login keychain and creates a new one. jamfHelper and AppleScript prompts facilitate warning the user of upcoming prompts, as well as capturing and passing the user‚Äôs password through while creating the new keychain.&lt;/p&gt;

&lt;p&gt;You can see the script &lt;a href=&quot;https://github.com/smashism/casper-scripts/blob/master/self-service/recreate_loginkeychain&quot;&gt;here&lt;/a&gt; and read my blogpost about how it all works &lt;a href=&quot;https://goo.gl/QzluF&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">recreate_keychain.sh</summary></entry><entry><title type="html">hello world</title><link href="http://localhost:4000/posts/2016/12/29/hello-world.html" rel="alternate" type="text/html" title="hello world" /><published>2016-12-29T00:00:00-06:00</published><updated>2016-12-29T00:00:00-06:00</updated><id>http://localhost:4000/posts/2016/12/29/hello-world</id><content type="html" xml:base="http://localhost:4000/posts/2016/12/29/hello-world.html">&lt;h2 id=&quot;introducing-smashismgithubio&quot;&gt;introducing smashism.github.io&lt;/h2&gt;

&lt;p&gt;Howdy, I‚Äôve set up this space to post updates when I add or update one of my scripts. You can see my main Git account &lt;a href=&quot;https://github.com/smashism&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;flex-theme&quot;&gt;Flex theme&lt;/h2&gt;

&lt;p&gt;I‚Äôm using the Flex theme. Flex is open sourced on GitHub and is licensed under the &lt;a href=&quot;http://opensource.org/licenses/MIT&quot;&gt;MIT License&lt;/a&gt;. Feel free to contribute to it anytime!&lt;/p&gt;</content><author><name></name></author><summary type="html">introducing smashism.github.io</summary></entry></feed>